{"ast":null,"code":"var _jsxFileName = \"D:\\\\wordle2\\\\wordle2\\\\client\\\\src\\\\components\\\\Board.js\";\nimport React from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Board = ({\n  wordLength,\n  maxGuesses\n}) => {\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: Array.from({\n      length: maxGuesses\n    }).map((_, i) => /*#__PURE__*/_jsxDEV(Row, {\n      children: Array.from({\n        length: wordLength\n      }).map((_, j) => /*#__PURE__*/_jsxDEV(Col, {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          maxLength: \"1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 37\n        }, this)\n      }, j, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 33\n      }, this))\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 21\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 9\n  }, this);\n};\n_c = Board;\nexport default Board;\nvar _c;\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"names":["React","Container","Row","Col","jsxDEV","_jsxDEV","Board","wordLength","maxGuesses","children","Array","from","length","map","_","i","j","type","maxLength","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/wordle2/wordle2/client/src/components/Board.js"],"sourcesContent":["import React from \"react\";\r\n\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\n\r\nconst Board = ({wordLength, maxGuesses}) => {\r\n\r\n\r\n    return (\r\n        <Container>\r\n            {\r\n                Array.from({ length: maxGuesses }).map((_, i) => (\r\n                    <Row key={i}>\r\n                        {\r\n                            Array.from({ length: wordLength }).map((_, j) => (\r\n                                <Col key={j}>\r\n                                    <input type=\"text\" maxLength=\"1\" />\r\n                                </Col>\r\n                            ))\r\n                        }\r\n                    </Row>\r\n                ))\r\n            }\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default Board;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,SAASC,SAAS,EAAEC,GAAG,EAAEC,GAAG,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtD,MAAMC,KAAK,GAAGA,CAAC;EAACC,UAAU;EAAEC;AAAU,CAAC,KAAK;EAGxC,oBACIH,OAAA,CAACJ,SAAS;IAAAQ,QAAA,EAEFC,KAAK,CAACC,IAAI,CAAC;MAAEC,MAAM,EAAEJ;IAAW,CAAC,CAAC,CAACK,GAAG,CAAC,CAACC,CAAC,EAAEC,CAAC,kBACxCV,OAAA,CAACH,GAAG;MAAAO,QAAA,EAEIC,KAAK,CAACC,IAAI,CAAC;QAAEC,MAAM,EAAEL;MAAW,CAAC,CAAC,CAACM,GAAG,CAAC,CAACC,CAAC,EAAEE,CAAC,kBACxCX,OAAA,CAACF,GAAG;QAAAM,QAAA,eACAJ,OAAA;UAAOY,IAAI,EAAC,MAAM;UAACC,SAAS,EAAC;QAAG;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC,GAD7BN,CAAC;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEN,CACR;IAAC,GANAP,CAAC;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAQN,CACR;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEC,CAAC;AAEpB,CAAC;AAACC,EAAA,GApBIjB,KAAK;AAsBX,eAAeA,KAAK;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}